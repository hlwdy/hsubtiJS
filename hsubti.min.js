function getLrcInfo(text){
	let res={},textArray=text.split('\n'),timeRule=[60000,1000,1],addTime=0,cnt=0;
	for (let textArrayKey in textArray) {
		let textArrayItem = textArray[textArrayKey];
		if (textArrayItem.match(/(?:\[\d+\:\d+(?:[.:]\d+)?\])+.*/)){
			let findWord = textArrayItem.replace(/(?:\[\d+\:\d+(?:[.:]\d+)?\])+/g,'').trim();
			if (findWord){
				let findTime = textArrayItem.match(/(?:\[\d+\:\d+(?:[.:]\d+)?\])/g);
				for (let findTimeKey in findTime) {
					cnt+=1;
					let findTimeItem = findTime[findTimeKey].match(/\d+/g);
					let nowTime = addTime;
					for (let x = 0; x < findTimeItem.length; x++)nowTime += parseInt(findTimeItem[x]) * timeRule[x];
					res[nowTime > 0 ? nowTime: 0] = findWord;
				}
			}
		}else if (textArrayItem.match(/^\[offset\:\-?[1-9]\d+\]$/))addTime-=parseInt(textArrayItem.substring(textArrayItem.indexOf(':')+1,textArrayItem.length));
	}
	return [cnt,res];
}
function formatlrctime(t){
	var timeRule=[60000,1000,1],sRule=[':','.',''],res="";
	for(var i=0;i<3;i+=1){
		var tmp=parseInt(t/timeRule[i]);
		if(tmp>=10)res+=tmp.toString()+sRule[i];
		else res+='0'+tmp.toString()+sRule[i];
		t-=tmp*timeRule[i];
	}
	return res+'0';
}
function lrc2webvtt(data) {
	var result="";
	var lrc=getLrcInfo(data);
	var info=lrc[1];
	var cnt=lrc[0];
	if(cnt>0){
		result+="WEBVTT\n";
		var tmp="",cnti=0;
		for(let i in info){
			cnti+=1;
			if(cnti==1){
				tmp=info[i];
				result+='1\n00:'+formatlrctime(i)+' --> ';
				continue;
			}
			result+='00:'+formatlrctime(i)+'\n'+tmp+'\n\n'+cnti.toString()+'\n00:'+formatlrctime(i)+' --> ';
			tmp=info[i];
			if(cnti==cnt)result+='00:'+formatlrctime(parseInt(i)+2500)+'\n'+tmp;
		}
	}
	return result;
}
function convertSrtCue(caption) {
	var cue = "",s = caption.split(/\n/);
	while (s.length > 3) {
		for (var i = 3; i < s.length; i++)s[2] += "\n" + s[i]
		s.splice(3, s.length - 3);
	}
	var line = 0;
	if (!s[0].match(/\d+:\d+:\d+/) && s[1].match(/\d+:\d+:\d+/)) {
		cue += s[0].match(/\w+/) + "\n";
		line += 1;
	}
	if (s[line].match(/\d+:\d+:\d+/)) {
		var m = s[1].match(/(\d+):(\d+):(\d+)(?:,(\d+))?\s*--?>\s*(\d+):(\d+):(\d+)(?:,(\d+))?/);
		if (m) {
			cue += m[1] + ":" + m[2] + ":" + m[3] + "." + m[4] + " --> " + m[5] + ":" + m[6] + ":" + m[7] + "." + m[8] + "\n";
			line += 1;
		} else return "";
	} else return "";
	if (s[line])cue+=s[line]+"\n\n";
	return cue;
}
function srt2webvtt(data) {
	var srt=data.replace(/\r+/g,'');
	srt=srt.replace(/^\s+|\s+$/g,'');
	var cuelist=srt.split('\n\n');
	var result="";
	if (cuelist.length>0){
		result+="WEBVTT\n";
		for(var i=0;i<cuelist.length;i+=1)result += convertSrtCue(cuelist[i]);
	}
	return result;
}
function File2Webvtt(e,callback){
	var reader = new FileReader();
	reader.fileName=e.name;
    reader.readAsText(e);
    reader.onload=function(e){
		var fileString=e.target.result;
		var l=e.target.fileName.split('.').pop();
		if(l=='srt')fileString=srt2webvtt(fileString);
		else if(l=='lrc')fileString=lrc2webvtt(fileString);
		callback(fileString);
	};
}
function str2blob(str){
	return new Blob([str],{type: "text/plain;charset=utf-8"});
}